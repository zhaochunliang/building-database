extends layout

block content
  section.container
    div.col-7
      h1 Add a building

      div.flash-error.flash-hidden
        span Error!

      form#add-form
        label(for="name") Name:
        input#name(type="text" name="name" placeholder="Building name" required)

        label(for="model") Model:
        input#model(type="file" name="model" accept=".zip,.obj,.dae,.ply,.dxf", required)

        label(for="creator") Creator (if not created by you):
        input#creator(type="text" name="creator" placeholder="Original creator of the model")

        label(for="creator-url") Creator URL (if not created by you):
        input#creator-url(type="url" name="creator-url" placeholder="Link to the original creator")

        label(for="method") How was the model created?
        select#method(name="method" required)
          option(value="") Select a method
          option(value="handmade") Handmade
          option(value="automated") Automated
          option(value="unknown") Unknown

        label(for="description") Description:
        textarea#description(name="description" placeholder="More detail on the building and your model" maxlength="500")

        button#add-button(type="submit") Add building

    div.col-5.guidelines
      h2 Guidelines

      ul
        li We prefer models of real, existing structures (pre-visualization models of structures under construction are fine).
        li We prefer individual buildings - please break up campuses and other groups of structures.
        li We prefer to keep face counts under 10K. If you have a very detailed model, please consider also uploading a low-rez version of it.
        li If you have textures, please zip everything up together before uploading.
        li Try to keep the total file size under 10MB.

      h2 Accepted file types

      ul
        li Collada (.dae)
        li Wavefront OBJ (.obj)

      h2 License
      p By uploading to this site, you grant us the right to display and store your model under a #[a(href="http://creativecommons.org/licenses/by/4.0/") Creative Commons Attribution 4.0] license, as well as to perform optimizations on the model to facilitate area-based downloading.

  script.
    var addForm = document.getElementById("add-form");
    var nameInput = document.getElementById("name");
    var fileInput = document.getElementById("model");
    var creatorInput = document.getElementById("creator");
    var creatorURLInput = document.getElementById("creator-url");
    var methodInput = document.getElementById("method");
    var descInput = document.getElementById("description");
    var addButton = document.getElementById("add-button");

    var flash = document.querySelector(".flash-error");

    // TODO: Catch errors and notify user
    addForm.addEventListener("submit", function(event) {
      event.target.checkValidity();
      event.preventDefault();
  
      flash.style.display = "none";
      addButton.innerHTML = "Uploading&hellip;";

      var files = fileInput.files;
      var file = files[0];

      // This requires IE 10+
      // What are the ramifications of this?
      // What alternatives exist for async file upload?
      var formData = new FormData();

      // Check the file type.
      if (!file.name.toLowerCase().match(".*\.zip|.*\.obj|.*\.dae|.*\.ply|.*\.dxf")) {
        console.log("Model file type not valid");
        return;
      }

      formData.append("name", nameInput.value);
      formData.append("model", file, file.name);

      if (creatorInput.value) {
        formData.append("creator", creatorInput.value);
      }

      if (creatorURLInput.value) {
        formData.append("creatorURL", creatorURLInput.value);
      }

      formData.append("method", methodInput.value);
      
      formData.append("description", descInput.value);

      $.ajax({
        url: "/api/buildings",
        data: formData,
        processData: false,
        contentType: false,
        type: "POST",
        success: function(data, status, xhr) {
          if (data.error) {
            flash.querySelector("span").textContent = data.error;
            flash.style.display = "block";
            addButton.innerHTML = "Add building";
          } else {
            window.location.href = "/add/location/" + data.building._id;
          }
        },
        error: function(xhr, errorType, error) {
          // TODO: Display error and course of action

          // Unauthenticated
          if (xhr.status === 403) {
            // Redirect to login page
            window.location.href = "/login";
          }

          console.log(xhr.status);
          console.log(errorType);
          console.log(error);
        }
      });
    });