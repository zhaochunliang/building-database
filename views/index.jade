extends layout

block content
  header.map
    div#map
    div.wrapper
      section.details
        h1 Polygon City
  
  div.wrapper
    h2 Latest buildings

    if buildings.length > 0
      .cards
        each building, key in buildings
          a.card(href="/building/#{building._id}")
            .card-image
              img(src="https://tyler-demo.herokuapp.com/?greyscale=true&lat=#{building.location.coordinates[1]}&lon=#{building.location.coordinates[0]}&zoom=17&width=344&height=200", alt="")
            .card-header
              | #{building.name}
            .card-copy
              p #{building.locality.district}, #{building.locality.country}
                if building.locality.countryCode
                  flag-icon(key="#{building.locality.countryCode}" img)
            .card-stats
              ul
                li
                  | #{building.structure.vertices}
                  span Vertices
                li
                  | #{building.structure.faces}
                  span Faces
                li
                  | #{building.stats.views}
                  span Views
                li
                  | #{building.stats.downloads}
                  span Downloads
    else
      p No buildings

  script(src="/lib/webcomponentsjs/webcomponents.min.js")
  link(rel="import" href="/lib/flag-icon/flag-icon.html")

  link(rel="stylesheet", href="https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.3/leaflet.css")
  script(src="https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.3/leaflet.js")

  script.
    var map = L.map("map", {zoomControl:false}).setView([50, 0], 3);

    L.tileLayer("http://{s}.tile.stamen.com/toner-lite/{z}/{x}/{y}.png", {
      //- attribution: "&copy; <a href='http://osm.org/copyright'>OpenStreetMap</a> contributors"
      attribution: "&copy; <a href='http://stamen.com'>Stamen</a> & <a href='http://osm.org/copyright'>OpenStreetMap</a> contributors"
    }).addTo(map);

    var buildings = !{JSON.stringify(buildings)};

    if (buildings.length > 0) {
      buildings.forEach(function(building, index) {
        var circle = L.circleMarker([building.location.coordinates[1], building.location.coordinates[0]], {
          radius: 5,
          weight: 2,
          color: "#fff",
          opacity: 1,
          fillColor: "#477DCA",
          fillOpacity: 1
        }).addTo(map);
      });
    }